{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n\n\n  const searchUsers = async text => {\n    //this.setState({ loading: true });\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users?q=\".concat(text, \"&client_id=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ users: res.data.items, loading: false });\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data //send to reducer\n\n    });\n  }; // Get User\n  // Get Repos\n  // Clear Users\n  // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  }); //Disptaches setLoading to the reducer\n\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;;AADyB,sBAQCf,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CARX;AAAA;AAAA,QAQlBK,KARkB;AAAA,QAQXC,QARW,oBAUzB;;;AACA,QAAMC,WAAW,GAAG,MAAMC,IAAN,IAAc;AAC9B;AACAC,IAAAA,UAAU;AACV,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,0CAA4CH,IAA5C,kCAChBI,OAAO,CAACC,GAAR,CAAYC,0BADI,sCAEhBF,OAAO,CAACC,GAAR,CAAYE,8BAFI,EAAlB,CAH8B,CAO9B;;AAEAT,IAAAA,QAAQ,CAAC;AACLU,MAAAA,IAAI,EAAEvB,YADD;AAELwB,MAAAA,OAAO,EAAEP,GAAG,CAACQ,IAFR,CAEa;;AAFb,KAAD,CAAR;AAIH,GAbD,CAXyB,CAyBzB;AAEA;AAEA;AAEA;;;AACA,QAAMT,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAAjC,CAhCyB,CAgCgC;;;AAGzD,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAI;AACLO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJV,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIL,KAAK,CAACoB,QARV,CADJ;AAYH,CA/CD;;AAiDA,eAAerB,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async text => {\n        //this.setState({ loading: true });\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        //this.setState({ users: res.data.items, loading: false });\n        \n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data //send to reducer\n        })\n    }\n    // Get User\n\n    // Get Repos\n\n    // Clear Users\n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING }) //Disptaches setLoading to the reducer\n\n\n    return (\n        <GithubContext.Provider\n            value = {{\n                users: state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading\n            }}\n        >\n           {props.children}\n        </GithubContext.Provider>\n    )\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}