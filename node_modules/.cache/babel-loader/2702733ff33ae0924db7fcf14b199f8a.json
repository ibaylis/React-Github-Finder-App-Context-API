{"ast":null,"code":"var _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/components/users/User.js\";\nimport React, { useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); // eslint-disable-next-line\n  }, []); // componentDidMount() {\n  //     this.props.getUser(match.params.login);\n  //     this.props.getUserRepos(match.params.login);\n  // }\n\n  const _user = user,\n        name = _user.name,\n        company = _user.company,\n        avatar_url = _user.avatar_url,\n        location = _user.location,\n        bio = _user.bio,\n        blog = _user.blog,\n        login = _user.login,\n        html_url = _user.html_url,\n        followers = _user.followers,\n        following = _user.following,\n        public_repos = _user.public_repos,\n        public_gists = _user.public_gists,\n        hireable = _user.hireable;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n  return React.createElement(React.Fragment, null, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Back To Search\"), \"Hireable:\", ' ', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, bio && React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Visit Github Profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, login && React.createElement(React.Fragment, null, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Username: \"), \" \", login)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, company && React.createElement(React.Fragment, null, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Company: \"), \" \", company)), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, blog && React.createElement(React.Fragment, null, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Website: \"), \" \", blog))))), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Followers: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Following: \", following), React.createElement(\"div\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Public Repos: \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Public Gists: \", public_gists)), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }));\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/components/users/User.js"],"names":["React","useEffect","useContext","Spinner","Repos","PropTypes","Link","GithubContext","User","getUserRepos","repos","match","getUser","params","login","user","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","loading","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport Repos from '../repos/Repos';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport GithubContext from '../../context/github/githubContext';\n\nconst User = ({ getUserRepos, repos, match }) => {\n    useEffect(() => {\n        getUser(match.params.login);\n        getUserRepos(match.params.login);\n        // eslint-disable-next-line\n    }, []);\n    // componentDidMount() {\n    //     this.props.getUser(match.params.login);\n    //     this.props.getUserRepos(match.params.login);\n    // }\n\n        const {\n            name,\n            company,\n            avatar_url,\n            location,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable\n        } = user;\n\n        if(loading) return <Spinner />\n\n        return (\n            <>\n                <Link to='/' className='btn btn-light'>\n                    Back To Search\n                </Link>\n                Hireable:{' '}\n                {hireable ? (\n                    <i className='fas fa-check text-success' />\n                ) : (\n                    <i className='fas fa-times-circle text-danger' />\n                )}\n                <div className='card grid-2'>\n                    <div className='all-center'>\n                        <img \n                            src={avatar_url}\n                            className='round-img'\n                            alt=''\n                            style={{ width: '150px' }}\n                        />\n                        <h1>{name}</h1>\n                        <p>Location: {location}</p>\n                    </div>\n                    <div>\n                        {bio && (\n                            <>\n                                <h3>Bio</h3>\n                                <p>{bio}</p>\n                            </>\n                        )}\n                        <a href={html_url} className='btn btn-dark my-1'>\n                            Visit Github Profile\n                        </a>\n                        <ul>\n                            <li>\n                               {login && \n                                    <>\n                                        <strong>Username: </strong> {login}\n                                    </>\n                                } \n                            </li>\n                            <li>\n                               {company && \n                                    <>\n                                        <strong>Company: </strong> {company}\n                                    </>\n                                } \n                            </li>\n                            <li>\n                               {blog && \n                                    <>\n                                        <strong>Website: </strong> {blog}\n                                    </>\n                                } \n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div className='card text-center'>\n                    <div className='badge badge-primary'>Followers: {followers}</div>\n                    <div className='badge badge-success'>Following: {following}</div>\n                    <div className='badge badge-light'>Public Repos: {public_repos}</div>\n                    <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos} />\n            </>\n        );\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n}\n\n\nexport default User;\n\n\n"]},"metadata":{},"sourceType":"module"}