{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({\n  setAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1]; // state = {\n  //     text: ''\n  // };\n\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText(''); //This is to clear the field after submiting the form\n    }\n  };\n\n  const onChange = e => {\n    setText(e.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), githubContext.users.length > 0 && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: githubContext.clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.propTypes = {\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","setAlert","githubContext","text","setText","onSubmit","e","preventDefault","searchUsers","onChange","target","value","users","length","clearUsers","propTypes","showClear","bool","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMC,aAAa,GAAGL,UAAU,CAACE,aAAD,CAAhC;;AAD6B,oBAELH,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAEtBO,IAFsB;AAAA,QAEhBC,OAFgB,kBAI7B;AACA;AACA;;;AAEA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACbF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP,CAFG,CAEU;AAChB;AACJ,GARD;;AAUA,QAAMK,QAAQ,GAAIH,CAAD,IAAO;AACpBF,IAAAA,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAGI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEF,IAJX;AAKI,IAAA,QAAQ,EAAEM,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,KAAK,EAAC,QAFV;AAGI,IAAA,SAAS,EAAC,wBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAeKP,aAAa,CAACU,KAAd,CAAoBC,MAApB,GAA6B,CAA7B,IACG;AACI,IAAA,SAAS,EAAC,yBADd;AAEI,IAAA,OAAO,EAAEX,aAAa,CAACY,UAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBR,CADJ;AAyBH,CA9CL;;AAgDAd,MAAM,CAACe,SAAP,GAAmB;AACfC,EAAAA,SAAS,EAAElB,SAAS,CAACmB,IAAV,CAAeC,UADX;AAEfjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,IAAV,CAAeD;AAFV,CAAnB;AAKA,eAAelB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({ setAlert }) => {\n    const githubContext = useContext(GithubContext)\n    const [text, setText] = useState('');\n    \n    // state = {\n    //     text: ''\n    // };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (text === '') {\n            setAlert('Please enter something', 'light');\n        } else {\n            githubContext.searchUsers(text);\n            setText(''); //This is to clear the field after submiting the form\n        }\n    }\n\n    const onChange = (e) => {\n        setText(e.target.value);\n    }\n        return (\n            <div>\n                <form onSubmit={onSubmit} className='form'>\n                    <input \n                        type='text' \n                        name='text' \n                        placeholder='Search Users...' \n                        value={text}\n                        onChange={onChange}\n                        />\n                    <input\n                        type='submit'\n                        value='Search'\n                        className='btn btn-dark btn-block'\n                    />\n                </form>\n                {githubContext.users.length > 0 && (\n                    <button \n                        className=\"btn btn-light btn-block\" \n                        onClick={githubContext.clearUsers}>\n                        Clear\n                    </button> \n                )}\n            </div>\n        )\n    }\n\nSearch.propTypes = {\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}