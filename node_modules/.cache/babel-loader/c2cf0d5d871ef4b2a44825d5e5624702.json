{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    users: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","repos","loading","state","dispatch","user","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,SALJ,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBA,IAAAA,KAAK,EAAE,EAFU;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;;AADyB,sBAQCd,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CARX;AAAA;AAAA,QAQlBI,KARkB;AAAA,QAQXC,QARW;;AAWzB,SACI,oBAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAI;AACLJ,MAAAA,KAAK,EAAEG,KAAK,CAACH,KADR;AAELK,MAAAA,IAAI,EAAEF,KAAK,CAACE,IAFP;AAGLJ,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJV,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQIJ,KAAK,CAACQ,QARV,CADJ;AAYH,CAvBD;;AAyBA,eAAeT,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types';\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        users: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n\n    return (\n        <GithubContext.Provider\n            value = {{\n                users: state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading\n            }}\n        >\n           {props.children}\n        </GithubContext.Provider>\n    )\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}