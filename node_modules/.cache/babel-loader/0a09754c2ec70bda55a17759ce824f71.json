{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from '../types';\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n\n\n  const searchUsers = async text => {\n    //this.setState({ loading: true });\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users?q=\".concat(text, \"&client_id=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ users: res.data.items, loading: false });\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items //send to reducer\n\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"\\n            ?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n            &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ user: res.data, loading: false });\n    // setUser(res.data.items);\n    // setLoading(false);\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc\\n            &client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n            &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ repos: res.data, loading: false });\n    // setRepos(res.data);\n    // setLoading(false);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  }); //Disptaches setLoading to the reducer\n\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n    SEARCH_USERS,\n    SET_LOADING,\n    CLEAR_USERS,\n    GET_USER,\n    GET_REPOS\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production') {\n    githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n    githubClientId = process.env.GITHUB_CLIENT_ID;\n    githubClientSecret = process.env.GITHUB_CLIENT_SECRET;   \n}\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    // Search Users\n    const searchUsers = async text => {\n        //this.setState({ loading: true });\n        setLoading();\n        const res = await axios.get(`https://api.github.com/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        //this.setState({ users: res.data.items, loading: false });\n        \n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items //send to reducer\n        })\n    }\n    // Get User\n    const getUser = async (username) => {\n        setLoading();\n\n        const res = await axios.get(\n            `https://api.github.com/users/${username}\n            ?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n            &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        //this.setState({ user: res.data, loading: false });\n        // setUser(res.data.items);\n        // setLoading(false);\n        dispatch({\n            type: GET_USER,\n            payload: res.data\n        })\n    }\n\n    // Get Repos\n    const getUserRepos = async (username) => {\n        setLoading();\n    \n        const res = await axios.get(\n            `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc\n            &client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n            &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    \n        //this.setState({ repos: res.data, loading: false });\n        // setRepos(res.data);\n        // setLoading(false);\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n    }\n\n\n    // Clear Users\n    const clearUsers = () => dispatch({ type: CLEAR_USERS })\n    \n\n    // Set Loading\n    const setLoading = () => dispatch({ type: SET_LOADING }) //Disptaches setLoading to the reducer\n\n\n    return (\n        <GithubContext.Provider\n            value = {{\n                users: state.users,\n                user: state.user,\n                repos: state.repos,\n                loading: state.loading,\n                searchUsers,\n                clearUsers,\n                getUser,\n                getUserRepos\n            }}\n        >\n           {props.children}\n        </GithubContext.Provider>\n    )\n}\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}