{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = null;\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Set Alert\n\n\n  const setAlert = (msg, type) => {\n    //this.setState({ alert: { msg, type } });\n    //setTimeout(() => this.setState({ alert: null }), 5000);\n    // setAlert({ msg, type });\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT\n    }), 5000);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alert: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/context/alert/AlertState.js"],"names":["React","useReducer","axios","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","payload","setTimeout","alert","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,IAArB;;AADwB,sBAGER,UAAU,CAACG,YAAD,EAAeK,YAAf,CAHZ;AAAA;AAAA,QAGjBC,KAHiB;AAAA,QAGVC,QAHU,oBAKxB;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B;AACA;AACD;AACAH,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELU,MAAAA,OAAO,EAAE;AAAEF,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAFJ,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MAAML,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAf,EAAyC,IAAzC,CAAV;AACF,GATD;;AAYA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAI;AAAEW,MAAAA,KAAK,EAAEP,KAAT;AAAgBE,MAAAA;AAAhB,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIJ,KAAK,CAACU,QAHV,CADJ;AAOH,CAzBD;;AA2BA,eAAeX,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n    const initialState = null;\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n    // Set Alert\n    const setAlert = (msg, type) => {\n        //this.setState({ alert: { msg, type } });\n        //setTimeout(() => this.setState({ alert: null }), 5000);\n       // setAlert({ msg, type });\n       dispatch({\n           type: SET_ALERT,\n           payload: { msg, type }\n       })\n       setTimeout(() => dispatch({ type: REMOVE_ALERT }), 5000);\n    };\n\n\n    return (\n        <AlertContext.Provider\n            value = {{ alert: state, setAlert }}\n        >\n           {props.children}\n        </AlertContext.Provider>\n    )\n}\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}