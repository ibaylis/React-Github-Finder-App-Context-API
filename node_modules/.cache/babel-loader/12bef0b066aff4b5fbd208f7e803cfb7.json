{"ast":null,"code":"import _slicedToArray from \"/Users/ibaylis/Desktop/react-project/react-github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ibaylis/Desktop/react-project/react-github-finder/src/App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\nimport GithubState from './context/github/GithubState';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repos = _useState6[0],\n        setRepos = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alert = _useState10[0],\n        setAlert = _useState10[1]; // state = {\n  //     users: [],\n  //     user: {},\n  //     repos: [],\n  //     loading: false,\n  //     alert: null\n  // }\n  // Search Github users\n\n\n  const searchUsers = async text => {\n    //this.setState({ loading: true });\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users?q=\".concat(text, \"&client_id=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\\n        \").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ users: res.data.items, loading: false });\n\n    setUsers(res.data.items);\n    setLoading(false);\n  }; // Get single Github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"\\n            ?client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n            &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ user: res.data, loading: false });\n\n    setUser(res.data.items);\n    setLoading(false);\n  }; // Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc\\n        &client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"\\n        &client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET)); //this.setState({ repos: res.data, loading: false });\n\n    setRepos(res.data);\n    setLoading(false);\n  }; // Clear users from state\n  //clearUsers = () => this.setState({ users: [], loading: false })\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; // Set Alert\n\n\n  const showAlert = (msg, type) => {\n    //this.setState({ alert: { msg, type } });\n    //setTimeout(() => this.setState({ alert: null }), 5000);\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    title: \"Github Finder\",\n    icon: \"fab fa-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(React.Fragment, null, React.createElement(Search, {\n      searchUsers: searchUsers,\n      clearUsers: clearUsers,\n      showClear: user.length > 0 ? true : false,\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Users, {\n      loading: loading,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      user: user,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })))));\n};\n\nexport default App; // componentDidMount() {\n//     axios.get('https://api.github.com/users')\n//          .then(res => console.log(res.data))\n// }\n// Notes\n//                       componentDidMount() {} -> async componentDidMount() {}\n// axios.get('https://api.github.com/users') -> const res = await axios.get('https://api.github.com/users');\n//       .then(res => console.log(res.data)) -> console.log(res.data);\n// async componentDidMount() {\n//     this.setState({ loading: true })\n//     const res = await axios.get(`https://api.github.com/users?client_id=\n//     ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n//     ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n//     this.setState({ users: res.data, loading: false });\n//     console.log(res.data);\n// }","map":{"version":3,"sources":["/Users/ibaylis/Desktop/react-project/react-github-finder/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","GithubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nimport GithubState from './context/github/GithubState';\nimport './App.css';\n\nconst App = () => {\n    const [users, setUsers] = useState([]);\n    const [user, setUser] = useState({});\n    const [repos, setRepos] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [alert, setAlert] = useState(null);\n\n    // state = {\n    //     users: [],\n    //     user: {},\n    //     repos: [],\n    //     loading: false,\n    //     alert: null\n\n    // }\n\n    \n\n    // Search Github users\n    const searchUsers = async text => {\n        //this.setState({ loading: true });\n        setLoading(true);\n        const res = await axios.get(`https://api.github.com/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        //this.setState({ users: res.data.items, loading: false });\n        setUsers(res.data.items);\n        setLoading(false);\n    }\n\n\n    // Get single Github user\n    const getUser = async (username) => {\n        setLoading(true);\n\n        const res = await axios.get(\n            `https://api.github.com/users/${username}\n            ?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n            &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n        //this.setState({ user: res.data, loading: false });\n        setUser(res.data.items);\n        setLoading(false);\n    }\n\n\n\n\n\n// Get users repos\nconst getUserRepos = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n        `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc\n        &client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}\n        &client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    //this.setState({ repos: res.data, loading: false });\n    setRepos(res.data);\n    setLoading(false);\n}\n\n\n\n\n\n    // Clear users from state\n    //clearUsers = () => this.setState({ users: [], loading: false })\n    const clearUsers = () => {\n        setUsers([]);\n        setLoading(false);\n    }\n\n    // Set Alert\n    const showAlert = (msg, type) => {\n        //this.setState({ alert: { msg, type } });\n        //setTimeout(() => this.setState({ alert: null }), 5000);\n        setAlert({ msg, type });\n        setTimeout(() => setAlert(null), 5000);\n    };\n\n        return (\n            <Router>\n                <div className='App'>\n                    <Navbar \n                        title='Github Finder' \n                        icon='fab fa-github'\n                    />\n                    <div className='container'>\n                        <Alert alert={alert} />\n                        <Switch>\n                            <Route \n                                exact path='/'\n                                render={props => (\n                                    <>\n                                        <Search \n                                            searchUsers={searchUsers} \n                                            clearUsers={clearUsers} \n                                            showClear={user.length > 0 ? true : false }\n                                            setAlert={showAlert}\n                                            />\n                                        <Users loading={loading} users={users} />    \n                                    </>\n                                )} \n                                />\n                                <Route exact path='/about' component={About} />\n                                <Route exact path='/user/:login' render={props => (\n                                    <User \n                                        { ...props } \n                                        getUser={getUser} \n                                        getUserRepos={getUserRepos} \n                                        user={user} \n                                        repos={repos}\n                                        loading={loading} \n                                    />\n                                )} />\n                        </Switch>\n                        \n                    </div>\n                </div>\n            </Router>\n        )\n}\n\nexport default App;\n\n    // componentDidMount() {\n    //     axios.get('https://api.github.com/users')\n    //          .then(res => console.log(res.data))\n    // }\n\n// Notes\n//                       componentDidMount() {} -> async componentDidMount() {}\n// axios.get('https://api.github.com/users') -> const res = await axios.get('https://api.github.com/users');\n//       .then(res => console.log(res.data)) -> console.log(res.data);\n\n    // async componentDidMount() {\n    //     this.setState({ loading: true })\n\n    //     const res = await axios.get(`https://api.github.com/users?client_id=\n    //     ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n    //     ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    //     this.setState({ users: res.data, loading: false });\n    //     console.log(res.data);\n    // }"]},"metadata":{},"sourceType":"module"}